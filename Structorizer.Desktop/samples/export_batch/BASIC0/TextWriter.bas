10 REM Demo program for routine drawText() 
20 REM Asks the user to enter a text, a wanted text height and colour, 
30 REM and then draws this string onto the turtle screen. Places every 
40 REM entered text to a new line. 
50 REM Generated by Structorizer 3.32-11 
60 
70 REM Copyright (C) 2019-10-10 Kay GÃ¼rtzig 
80 REM License: GPLv3-link 
90 REM GNU General Public License (V 3) 
100 REM https://www.gnu.org/licenses/gpl.html 
110 REM http://www.gnu.de/documents/gpl.de.html 
120 
130 REM  
140 REM program TextDemo
150 REM TODO: add the respective type suffixes to your variable names if required 
160 PRINT "This is a demo program for text writing with Turleizer."
170 showTurtle()
180 penDown()
190 LET y = 0
200 DO
210   PRINT "Enter some text (empty string to exit)"; : INPUT text
220   REM Make sure the content is interpreted as string 
230   LET text = "" + text
240   IF text <> "" THEN
250     DO
260       PRINT "Height of the text (pixels)"; : INPUT height
270     LOOP UNTIL height >= 5
280     DO
290       PRINT "Colour (1=black, 2=red, 3=yellow, 4=green, 5=cyan, 6=blue, 7=pink, 8=gray, 9=orange, 10=violet)"; : INPUT colour
300     LOOP UNTIL colour >= 1 AND colour <= 10
310     LET y = y + height + 2
320     gotoXY(0, y - 2)
330     CALL drawText(text, height, colour)
340   END IF
350 LOOP UNTIL text = ""
360 gotoXY(0, y + 15)
370 CALL drawText("Thank you, bye.", 10, 4)
380 hideTurtle()
390 END
400 REM  
410 REM TODO: Add type-specific suffixes where necessary! 
420 SUB backward(len, color)
430   REM TODO: add the respective type suffixes to your variable names if required 
440   SELECT CASE color
450     CASE 1
460       backward(len) : REM color = ffffff
470     CASE 2
480       backward(len) : REM color = ff8080
490     CASE 3
500       backward(len) : REM color = ffff80
510     CASE 4
520       backward(len) : REM color = 80ff80
530     CASE 5
540       backward(len) : REM color = 80ffff
550     CASE 6
560       backward(len) : REM color = 0080ff
570     CASE 7
580       backward(len) : REM color = ff80c0
590     CASE 8
600       backward(len) : REM color = c0c0c0
610     CASE 9
620       backward(len) : REM color = ff8000
630     CASE 10
640       backward(len) : REM color = 8080ff
650   END SELECT
660 END SUB
670 REM  
680 REM Draws a blank for font height h, ignoring the colorNo 
690 REM TODO: Add type-specific suffixes where necessary! 
700 SUB blank(h, colorNo)
710   REM TODO: add the respective type suffixes to your variable names if required 
720   LET width = h/2.0
730   penUp()
740   right(90)
750   forward(width) : REM color = ffffff
760   left(90)
770 END SUB
780 REM  
790 REM TODO: Add type-specific suffixes where necessary! 
800 SUB forward(len, color)
810   REM TODO: add the respective type suffixes to your variable names if required 
820   SELECT CASE color
830     CASE 1
840       forward(len) : REM color = ffffff
850     CASE 2
860       forward(len) : REM color = ff8080
870     CASE 3
880       forward(len) : REM color = ffff80
890     CASE 4
900       forward(len) : REM color = 80ff80
910     CASE 5
920       forward(len) : REM color = 80ffff
930     CASE 6
940       forward(len) : REM color = 0080ff
950     CASE 7
960       forward(len) : REM color = ff80c0
970     CASE 8
980       forward(len) : REM color = c0c0c0
990     CASE 9
1000       forward(len) : REM color = ff8000
1010     CASE 10
1020       forward(len) : REM color = 8080ff
1030   END SELECT
1040 END SUB
1050 REM  
1060 REM Draws digit 1 in the colour specified by colorNo with font height h 
1070 REM from the current turtle position. 
1080 REM TODO: Add type-specific suffixes where necessary! 
1090 SUB digit1(h, colorNo)
1100   REM TODO: add the respective type suffixes to your variable names if required 
1110   penUp()
1120   forward(h/2.0) : REM color = ffffff
1130   penDown()
1140   right(45)
1150   CALL forward(h/sqrt(2), colorNo)
1160   left(45)
1170   CALL backward(h, colorNo)
1180 END SUB
1190 REM  
1200 REM Draws digit 4 in the colour specified by colorNo with font height h 
1210 REM from the current turtle position. 
1220 REM TODO: Add type-specific suffixes where necessary! 
1230 SUB digit4(h, colorNo)
1240   REM TODO: add the respective type suffixes to your variable names if required 
1250   REM Octagon edge length 
1260   LET b = h * 0.5 / (sqrt(2.0) + 1)
1270   REM Cathetus of the corner triangle outside the octagon 
1280   LET c = b / sqrt(2.0)
1290   REM inner angle at top of the triangle 
1300   LET angle = toDegrees(atan(1 - 2.0*c/h))
1310   right(90)
1320   penUp()
1330   forward(c + b) : REM color = ffffff
1340   penDown()
1350   left(90)
1360   CALL forward(h, colorNo)
1370   left(180 - angle)
1380   CALL forward(sqrt(h*h/4.0 + sqr(h/2.0 - c)), colorNo)
1390   left(90 + angle)
1400   CALL forward(h/2.0, colorNo)
1410   penUp()
1420   left(90)
1430   backward(h/2.0) : REM color = ffffff
1440   penDown()
1450 END SUB
1460 REM  
1470 REM Draws digit 7 in the colour specified by colorNo with font height h 
1480 REM from the current turtle position. 
1490 REM TODO: Add type-specific suffixes where necessary! 
1500 SUB digit7(h, colorNo)
1510   REM TODO: add the respective type suffixes to your variable names if required 
1520   LET angle = 90 + toDegrees(atan(0.5))
1530   penUp()
1540   forward(h) : REM color = ffffff
1550   penDown()
1560   right(90)
1570   CALL forward(h/2.0, colorNo)
1580   right(angle)
1590   CALL forward(h * sqrt(1.25), colorNo)
1600   left(angle)
1610   penUp()
1620   forward(h/2.0) : REM color = ffffff
1630   left(90)
1640   penDown()
1650 END SUB
1660 REM  
1670 REM Draws letter A in colour specified by colorNo with font height h 
1680 REM from the current turtle position. 
1690 REM TODO: Add type-specific suffixes where necessary! 
1700 SUB letterA(h, colorNo)
1710   REM TODO: add the respective type suffixes to your variable names if required 
1720   LET width = h/2.0
1730   LET hypo = sqrt(h*h + width*width/4.0)
1740   LET rotAngle = toDegrees(atan(width/2.0/h))
1750   right(rotAngle)
1760   CALL forward(hypo/2.0, colorNo)
1770   right(90 - rotAngle)
1780   CALL forward(width/2.0, colorNo)
1790   penUp()
1800   backward(width/2.0) : REM color = ffffff
1810   penDown()
1820   left(90 - rotAngle)
1830   CALL forward(hypo/2.0, colorNo)
1840   left(2*rotAngle)
1850   CALL forward(-hypo, colorNo)
1860   right(rotAngle)
1870 END SUB
1880 REM  
1890 REM Draws letter E in colour specified by colorNo with font height h 
1900 REM from the current turtle position. 
1910 REM TODO: Add type-specific suffixes where necessary! 
1920 SUB letterE(h, colorNo)
1930   REM TODO: add the respective type suffixes to your variable names if required 
1940   LET width = h/2.0
1950   CALL forward(h, colorNo)
1960   right(90)
1970   CALL forward(width, colorNo)
1980   right(90)
1990   penUp()
2000   forward(h/2.0) : REM color = ffffff
2010   right(90)
2020   penDown()
2030   CALL forward(width, colorNo)
2040   left(90)
2050   penUp()
2060   forward(h/2.0) : REM color = ffffff
2070   left(90)
2080   penDown()
2090   CALL forward(width, colorNo)
2100   left(90)
2110 END SUB
2120 REM  
2130 REM Draws letter F in colour specified by colorNo with font height h 
2140 REM from the current turtle position. 
2150 REM TODO: Add type-specific suffixes where necessary! 
2160 SUB letterF(h, colorNo)
2170   REM TODO: add the respective type suffixes to your variable names if required 
2180   LET width = h/2.0
2190   CALL forward(h, colorNo)
2200   right(90)
2210   CALL forward(width, colorNo)
2220   right(90)
2230   penUp()
2240   forward(h/2.0) : REM color = ffffff
2250   right(90)
2260   penDown()
2270   CALL forward(width, colorNo)
2280   left(90)
2290   penUp()
2300   forward(h/2.0) : REM color = ffffff
2310   left(90)
2320   forward(width) : REM color = ffffff
2330   penDown()
2340   left(90)
2350 END SUB
2360 REM  
2370 REM Draws letter H in colour specified by colorNo with font height h 
2380 REM from the current turtle position. 
2390 REM TODO: Add type-specific suffixes where necessary! 
2400 SUB letterH(h, colorNo)
2410   REM TODO: add the respective type suffixes to your variable names if required 
2420   LET width = h/2.0
2430   CALL forward(h, colorNo)
2440   penUp()
2450   right(90)
2460   forward(width) : REM color = ffffff
2470   right(90)
2480   penDown()
2490   CALL forward(h/2.0, colorNo)
2500   right(90)
2510   CALL forward(width, colorNo)
2520   penUp()
2530   backward(width) : REM color = ffffff
2540   left(90)
2550   penDown()
2560   CALL forward(h/2.0, colorNo)
2570   left(180)
2580 END SUB
2590 REM  
2600 REM Draws letter I in colour specified by colorNo with font height h 
2610 REM from the current turtle position. 
2620 REM TODO: Add type-specific suffixes where necessary! 
2630 SUB letterI(h, colorNo)
2640   REM TODO: add the respective type suffixes to your variable names if required 
2650   REM Octagon edge length 
2660   LET b = h * 0.5 / (sqrt(2.0) + 1)
2670   REM Cathetus of the corner triangle outside the octagon 
2680   LET c = b / sqrt(2.0)
2690   penUp()
2700   right(90)
2710   forward(c) : REM color = ffffff
2720   penDown()
2730   CALL forward(b, colorNo)
2740   penUp()
2750   backward(b/2.0) : REM color = ffffff
2760   left(90)
2770   penDown()
2780   CALL forward(h, colorNo)
2790   penUp()
2800   right(90)
2810   backward(b/2.0) : REM color = ffffff
2820   penDown()
2830   CALL forward(b, colorNo)
2840   penUp()
2850   forward(b/2 + c) : REM color = ffffff
2860   left(90)
2870   backward(h) : REM color = ffffff
2880   penDown()
2890 END SUB
2900 REM  
2910 REM Draws letter K in colour specified by colorNo with font height h 
2920 REM from the current turtle position. 
2930 REM TODO: Add type-specific suffixes where necessary! 
2940 SUB letterK(h, colorNo)
2950   REM TODO: add the respective type suffixes to your variable names if required 
2960   LET width = h/2.0
2970   LET diag = h/sqrt(2.0)
2980   CALL forward(h, colorNo)
2990   penUp()
3000   right(90)
3010   forward(width) : REM color = ffffff
3020   right(135)
3030   penDown()
3040   CALL forward(diag, colorNo)
3050   left(90)
3060   CALL forward(diag, colorNo)
3070   left(135)
3080 END SUB
3090 REM  
3100 REM Draws letter L in colour specified by colorNo with font height h 
3110 REM from the current turtle position. 
3120 REM TODO: Add type-specific suffixes where necessary! 
3130 SUB letterL(h, colorNo)
3140   REM TODO: add the respective type suffixes to your variable names if required 
3150   LET width = h/2.0
3160   CALL forward(h, colorNo)
3170   penUp()
3180   backward(h) : REM color = ffffff
3190   right(90)
3200   penDown()
3210   CALL forward(width, colorNo)
3220   left(90)
3230 END SUB
3240 REM  
3250 REM Draws letter M in colour specified by colorNo with font height h 
3260 REM from the current turtle position. 
3270 REM TODO: Add type-specific suffixes where necessary! 
3280 SUB letterM(h, colorNo)
3290   REM TODO: add the respective type suffixes to your variable names if required 
3300   LET width = h/2.0
3310   LET hypo = sqrt(width*width + h*h)/2.0
3320   LET rotAngle = toDegrees(atan(width/h))
3330   CALL forward(h, colorNo)
3340   left(rotAngle)
3350   CALL forward(-hypo, colorNo)
3360   right(2*rotAngle)
3370   CALL forward(hypo, colorNo)
3380   left(rotAngle)
3390   CALL forward(-h, colorNo)
3400 END SUB
3410 REM  
3420 REM Draws letter N in colour specified by colorNo with font height h 
3430 REM from the current turtle position. 
3440 REM TODO: Add type-specific suffixes where necessary! 
3450 SUB letterN(h, colorNo)
3460   REM TODO: add the respective type suffixes to your variable names if required 
3470   LET width = h/2.0
3480   LET hypo = sqrt(width*width + h*h)
3490   LET rotAngle = toDegrees(atan(width/h))
3500   CALL forward(h, colorNo)
3510   left(rotAngle)
3520   CALL forward(-hypo, colorNo)
3530   right(rotAngle)
3540   CALL forward(h, colorNo)
3550   penUp()
3560   backward(h) : REM color = ffffff
3570   penDown()
3580 END SUB
3590 REM  
3600 REM Draws letter T in colour specified by colorNo with font height h 
3610 REM from the current turtle position. 
3620 REM TODO: Add type-specific suffixes where necessary! 
3630 SUB letterT(h, colorNo)
3640   REM TODO: add the respective type suffixes to your variable names if required 
3650   LET width = h/2.0
3660   penUp()
3670   forward(h) : REM color = ffffff
3680   penDown()
3690   right(90)
3700   CALL forward(width, colorNo)
3710   penUp()
3720   backward(width/2.0) : REM color = ffffff
3730   penDown()
3740   right(90)
3750   CALL forward(h, colorNo)
3760   left(90)
3770   penUp()
3780   forward(width/2.0) : REM color = ffffff
3790   penDown()
3800   left(90)
3810 END SUB
3820 REM  
3830 REM Draws letter V in colour specified by colorNo with font height h 
3840 REM from the current turtle position. 
3850 REM TODO: Add type-specific suffixes where necessary! 
3860 SUB letterV(h, colorNo)
3870   REM TODO: add the respective type suffixes to your variable names if required 
3880   LET width = h/2.0
3890   LET hypo = sqrt(h*h + width*width/4.0)
3900   LET rotAngle = toDegrees(atan(width/2.0/h))
3910   penUp()
3920   forward(h) : REM color = ffffff
3930   left(rotAngle)
3940   penDown()
3950   CALL forward(-hypo, colorNo)
3960   right(2*rotAngle)
3970   CALL forward(hypo, colorNo)
3980   penUp()
3990   left(rotAngle)
4000   backward(h) : REM color = ffffff
4010   penDown()
4020 END SUB
4030 REM  
4040 REM Draws letter W in colour specified by colorNo with font height h 
4050 REM from the current turtle position. 
4060 REM TODO: Add type-specific suffixes where necessary! 
4070 SUB letterW(h, colorNo)
4080   REM TODO: add the respective type suffixes to your variable names if required 
4090   LET width = h/2.0
4100   LET width_3 = width/3.0
4110   LET hypo = sqrt(width_3*width_3 + h*h)
4120   LET rotAngle = toDegrees(atan(width_3/h))
4130   penUp()
4140   forward(h) : REM color = ffffff
4150   left(rotAngle)
4160   penDown()
4170   CALL forward(-hypo, colorNo)
4180   right(2*rotAngle)
4190   CALL forward(hypo, colorNo)
4200   penUp()
4210   left(90+rotAngle)
4220   forward(width_3) : REM color = ffffff
4230   right(90-rotAngle)
4240   penDown()
4250   CALL forward(-hypo, colorNo)
4260   right(2*rotAngle)
4270   CALL forward(hypo, colorNo)
4280   penUp()
4290   left(rotAngle)
4300   backward(h) : REM color = ffffff
4310   penDown()
4320 END SUB
4330 REM  
4340 REM Draws letter X in colour specified by colorNo with font height h 
4350 REM from the current turtle position. 
4360 REM TODO: Add type-specific suffixes where necessary! 
4370 SUB letterX(h, colorNo)
4380   REM TODO: add the respective type suffixes to your variable names if required 
4390   LET width = h/2.0
4400   LET hypo = sqrt(width*width + h*h)
4410   LET rotAngle = toDegrees(atan(width/h))
4420   right(rotAngle)
4430   CALL forward(hypo, colorNo)
4440   penUp()
4450   left(90+rotAngle)
4460   forward(width) : REM color = ffffff
4470   right(90-rotAngle)
4480   penDown()
4490   CALL forward(-hypo, colorNo)
4500   right(rotAngle)
4510 END SUB
4520 REM  
4530 REM Draws letter Y in colour specified by colorNo with font height h 
4540 REM from the current turtle position. 
4550 REM TODO: Add type-specific suffixes where necessary! 
4560 SUB letterY(h, colorNo)
4570   REM TODO: add the respective type suffixes to your variable names if required 
4580   LET width = h/2.0
4590   LET hypo = sqrt(width*width + h*h)/2.0
4600   LET rotAngle = toDegrees(atan(width/h))
4610   penUp()
4620   forward(h) : REM color = ffffff
4630   left(rotAngle)
4640   penDown()
4650   CALL forward(-hypo, colorNo)
4660   right(rotAngle)
4670   penUp()
4680   backward(h/2.0) : REM color = ffffff
4690   penDown()
4700   CALL forward(h/2.0, colorNo)
4710   right(rotAngle)
4720   CALL forward(hypo, colorNo)
4730   left(rotAngle)
4740   penUp()
4750   backward(h) : REM color = ffffff
4760   penDown()
4770 END SUB
4780 REM  
4790 REM Draws letter Z in colour specified by colorNo with font height h 
4800 REM from the current turtle position. 
4810 REM TODO: Add type-specific suffixes where necessary! 
4820 SUB letterZ(h, colorNo)
4830   REM TODO: add the respective type suffixes to your variable names if required 
4840   LET width = h/2.0
4850   LET hypo = sqrt(width*width + h*h)
4860   LET rotAngle = toDegrees(atan(width/h))
4870   penUp()
4880   forward(h) : REM color = ffffff
4890   right(90)
4900   penDown()
4910   CALL forward(width, colorNo)
4920   left(90-rotAngle)
4930   CALL forward(-hypo, colorNo)
4940   right(90-rotAngle)
4950   CALL forward(width, colorNo)
4960   left(90)
4970 END SUB
4980 REM  
4990 REM Draws nEdges edges of a regular n-polygon with edge length a 
5000 REM counter-clockwise, if ctrclkws is true, or clockwise if ctrclkws is false. 
5010 REM TODO: Add type-specific suffixes where necessary! 
5020 SUB polygonPart(a AS double, n AS integer, ctrclkws AS boolean, nEdges AS integer, color AS Integer)
5030   REM TODO: add the respective type suffixes to your variable names if required 
5040   LET rotAngle = 360.0/n
5050   IF ctrclkws THEN
5060     LET rotAngle = -rotAngle
5070   END IF
5080   FOR k = 1 TO nEdges
5090     right(rotAngle)
5100     CALL forward(a, color)
5110   NEXT k
5120 END SUB
5130 REM  
5140 REM Draws a dummy character (small centered square) with font height h and 
5150 REM the colour encoded by colorNo 
5160 REM TODO: Add type-specific suffixes where necessary! 
5170 SUB charDummy(h, colorNo)
5180   REM TODO: add the respective type suffixes to your variable names if required 
5190   LET width = h / 2.0
5200   REM Octagon edge length (here: edge lengzh of the square) 
5210   LET b = width / (sqrt(2.0) + 1)
5220   REM Cathetus of the corner triangle outside the octagon 
5230   LET c = (width - b) / 2.0
5240   LET d = b / sqrt(2.0)
5250   penUp()
5260   forward(h/2.0-b/2.0) : REM color = ffffff
5270   right(90)
5280   forward(c) : REM color = ffffff
5290   right(90)
5300   penDown()
5310   REM Draws the square with edge length b 
5320   CALL polygonPart(b, 4, true, 4, colorNo)
5330   penUp()
5340   left(90)
5350   forward(b + c) : REM color = ffffff
5360   left(90)
5370   backward(h/2.0-b/2.0) : REM color = ffffff
5380   penDown()
5390 END SUB
5400 REM  
5410 REM Draws a comma in colour specified by colorNo with font height h 
5420 REM from the current turtle position. 
5430 REM TODO: Add type-specific suffixes where necessary! 
5440 SUB comma(h, colorNo)
5450   REM TODO: add the respective type suffixes to your variable names if required 
5460   REM Octagon edge length 
5470   LET b = h * 0.5 / (sqrt(2.0) + 1)
5480   REM Cathetus of the outer corner triangle of the octagon 
5490   LET c = b / sqrt(2.0)
5500   LET rotAngle = toDegrees(atan(0.5))
5510   LET hypo = c * sqrt(1.25)
5520   penUp()
5530   right(90)
5540   forward((c+b)/2.0 + c) : REM color = ffffff
5550   penDown()
5560   REM Counterclockwise draw 3 edges of a square with edge length c 
5570   REM in the colour endcoded by colorNo 
5580   CALL polygonPart(c, 4, true, 3, colorNo)
5590   left(90)
5600   CALL forward(c/2.0, colorNo)
5610   right(90)
5620   CALL forward(c, colorNo)
5630   left(180 - rotAngle)
5640   CALL forward(hypo, colorNo)
5650   penUp()
5660   right(90 - rotAngle)
5670   forward((c + b)/2.0) : REM color = ffffff
5680   left(90)
5690   penDown()
5700 END SUB
5710 REM  
5720 REM Draws digit 2 in the colour specified by colorNo with font height h 
5730 REM from the current turtle position. 
5740 REM TODO: Add type-specific suffixes where necessary! 
5750 SUB digit2(h, colorNo)
5760   REM TODO: add the respective type suffixes to your variable names if required 
5770   REM Octagon edge length 
5780   LET b = h * 0.5 / (sqrt(2.0) + 1)
5790   REM Cathetus of the corner triangle outside the octagon 
5800   LET c = b / sqrt(2.0)
5810   LET angle = toDegrees(atan(h/(h + 2*c)))
5820   penUp()
5830   forward(h - c) : REM color = ffffff
5840   penDown()
5850   REM Clockwise draw 4 edges of an octagon with edge length b 
5860   REM in the colour endcoded by colorNo 
5870   CALL polygonPart(b, 8, false, 4, colorNo)
5880   right(angle)
5890   CALL forward(h/2.0 * sqrt(1 + sqr(1+2*c/h)), colorNo)
5900   left(90 + angle)
5910   CALL forward(h/2.0, colorNo)
5920   left(90)
5930 END SUB
5940 REM  
5950 REM Draws digit 3 in the colour specified by colorNo with font height h 
5960 REM from the current turtle position. 
5970 REM TODO: Add type-specific suffixes where necessary! 
5980 SUB digit3(h, colorNo)
5990   REM TODO: add the respective type suffixes to your variable names if required 
6000   REM Octagon edge length 
6010   LET b = h * 0.5 / (sqrt(2.0) + 1)
6020   REM Cathetus of the corner triangle outside the octagon 
6030   LET c = b / sqrt(2.0)
6040   penUp()
6050   forward(c) : REM color = ffffff
6060   penDown()
6070   right(180)
6080   REM Counterclockwise draw 6 edges of an octagon with edge length b 
6090   REM in the colour endcoded by colorNo 
6100   CALL polygonPart(b, 8, true, 6, colorNo)
6110   penUp()
6120   left(180)
6130   forward(b) : REM color = ffffff
6140   penDown()
6150   REM Counterclockwise draw 5 edges of an octagon with edge length b 
6160   REM in the colour endcoded by colorNo 
6170   CALL polygonPart(b, 8, true, 5, colorNo)
6180   penUp()
6190   left(45)
6200   forward(h-c) : REM color = ffffff
6210   left(90)
6220   forward(h/2.0) : REM color = ffffff
6230   left(90)
6240   penDown()
6250 END SUB
6260 REM  
6270 REM Draws digit 5 in the colour specified by colorNo with font height h 
6280 REM from the current turtle position. 
6290 REM TODO: Add type-specific suffixes where necessary! 
6300 SUB digit5(h, colorNo)
6310   REM TODO: add the respective type suffixes to your variable names if required 
6320   REM Octagon edge length 
6330   LET b = h * 0.5 / (sqrt(2.0) + 1)
6340   REM Cathetus of the corner triangle outside the octagon 
6350   LET c = b / sqrt(2.0)
6360   penUp()
6370   forward(c) : REM color = ffffff
6380   penDown()
6390   right(180)
6400   REM Counterclockwise draw 6 edges of an octagon with edge length b 
6410   REM in the colour endcoded by colorNo 
6420   CALL polygonPart(b, 8, true, 6, colorNo)
6430   CALL forward(c, colorNo)
6440   REM Clockwise draw 2 edges of an octagon with edge length b 
6450   REM in the colour endcoded by colorNo 
6460   CALL polygonPart(h/2.0, 4, false, 2, colorNo)
6470   penUp()
6480   left(90)
6490   backward(h) : REM color = ffffff
6500   penDown()
6510 END SUB
6520 REM  
6530 REM Draws digit 6 in the colour specified by colorNo with font height h 
6540 REM from the current turtle position. 
6550 REM TODO: Add type-specific suffixes where necessary! 
6560 SUB digit6(h, colorNo)
6570   REM TODO: add the respective type suffixes to your variable names if required 
6580   REM Octagon edge length 
6590   LET b = h * 0.5 / (sqrt(2.0) + 1)
6600   REM Cathetus of the corner triangle outside the octagon 
6610   LET c = b / sqrt(2.0)
6620   penUp()
6630   forward(c) : REM color = ffffff
6640   penDown()
6650   right(180)
6660   REM Counterclockwise draw all 8 edges of an octagon with edge length b 
6670   REM in the colour endcoded by colorNo 
6680   CALL polygonPart(b, 8, true, 8, colorNo)
6690   penUp()
6700   left(180)
6710   forward(b) : REM color = ffffff
6720   penDown()
6730   CALL forward(2 * c + b, colorNo)
6740   REM Clockwise draw 3 edges of an octagon with edge length b 
6750   REM in the colour endcoded by colorNo 
6760   CALL polygonPart(b, 8, false, 3, colorNo)
6770   penUp()
6780   left(135)
6790   backward(h-c) : REM color = ffffff
6800   penDown()
6810 END SUB
6820 REM  
6830 REM Draws digit 8 in the colour specified by colorNo with font height h 
6840 REM from the current turtle position. 
6850 REM TODO: Add type-specific suffixes where necessary! 
6860 SUB digit8(h, colorNo)
6870   REM TODO: add the respective type suffixes to your variable names if required 
6880   REM Octagon edge length 
6890   LET b = h * 0.5 / (sqrt(2.0) + 1)
6900   REM Cathetus of the corner triangle outside the octagon 
6910   LET c = b / sqrt(2.0)
6920   penUp()
6930   forward(c) : REM color = ffffff
6940   penDown()
6950   right(180)
6960   REM Counterclockwise draw all 8 edges of an octagon with edge length b 
6970   REM in the colour endcoded by colorNo 
6980   CALL polygonPart(b, 8, true, 8, colorNo)
6990   penUp()
7000   left(180)
7010   forward(b) : REM color = ffffff
7020   right(45)
7030   forward(b) : REM color = ffffff
7040   left(135)
7050   penDown()
7060   REM Clockwise draw 7 edges of an octagon with edge length b 
7070   REM in the colour endcoded by colorNo 
7080   CALL polygonPart(b, 8, false, 7, colorNo)
7090   penUp()
7100   left(45)
7110   forward(h/2.0) : REM color = ffffff
7120   left(90)
7130   forward(c) : REM color = ffffff
7140   left(90)
7150   penDown()
7160 END SUB
7170 REM  
7180 REM Draws digit 9 in the colour specified by colorNo with font height h 
7190 REM from the current turtle position. 
7200 REM TODO: Add type-specific suffixes where necessary! 
7210 SUB digit9(h, colorNo)
7220   REM TODO: add the respective type suffixes to your variable names if required 
7230   REM Octagon edge length 
7240   LET b = h * 0.5 / (sqrt(2.0) + 1)
7250   REM Cathetus of the corner triangle outside the octagon 
7260   LET c = b / sqrt(2.0)
7270   penUp()
7280   forward(c) : REM color = ffffff
7290   penDown()
7300   right(180)
7310   REM Counterclockwise draw 4 edges of an octagon with edge length b 
7320   REM in the colour endcoded by colorNo 
7330   CALL polygonPart(b, 8, true, 4, colorNo)
7340   CALL forward(2 * c + b, colorNo)
7350   REM Counterclockwise draw 7 edges of an octagon with edge length b 
7360   REM in the colour endcoded by colorNo 
7370   CALL polygonPart(b, 8, true, 7, colorNo)
7380   penUp()
7390   left(45)
7400   backward(h/2.0 + c) : REM color = ffffff
7410   penDown()
7420 END SUB
7430 REM  
7440 REM Draws an exclamation mark in the colour encoded by colorNo with font height h 
7450 REM from the current turtle position. 
7460 REM TODO: Add type-specific suffixes where necessary! 
7470 SUB exclMk(h, colorNo)
7480   REM TODO: add the respective type suffixes to your variable names if required 
7490   REM Octagon edge length 
7500   LET b = h * 0.5 / (sqrt(2.0) + 1)
7510   REM Cathetus of the outer corner triangle of the octagon 
7520   LET c = b / sqrt(2.0)
7530   LET width = h/2.0
7540   LET length1 = h - (b+c)/2.0
7550   LET length2 = length1 - 2*c
7560   LET hypo = sqrt(width*width/16.0 + length2*length2)
7570   REM 360Â°/8 
7580   LET rotAngle = 45
7590   LET rotAngle2 = toDegrees(atan(width/4.0/length2))
7600   penUp()
7610   forward(length1) : REM color = ffffff
7620   right(90)
7630   forward(width/2.0) : REM color = ffffff
7640   left(90 + rotAngle)
7650   penDown()
7660   REM Clockwise draw 5 edges of an octagon with edge length b/2 
7670   REM in the colour endcoded by colorNo 
7680   CALL polygonPart(b/2.0, 8, false, 5, colorNo)
7690   right(rotAngle2)
7700   CALL forward(hypo, colorNo)
7710   left(2*rotAngle2)
7720   CALL forward(-hypo, colorNo)
7730   penUp()
7740   forward(hypo) : REM color = ffffff
7750   right(rotAngle2)
7760   forward(c) : REM color = ffffff
7770   left(90)
7780   forward(c/2.0) : REM color = ffffff
7790   penDown()
7800   REM Counterclockwise draw all 4 edges of a squarfe with edge length c 
7810   REM in the colour endcoded by colorNo 
7820   CALL polygonPart(c, 4, false, 4, colorNo)
7830   penUp()
7840   forward((c + b)/2.0) : REM color = ffffff
7850   left(90)
7860   backward(c) : REM color = ffffff
7870   penDown()
7880 END SUB
7890 REM  
7900 REM Draws a full stop in colour specified by colorNo with font height h 
7910 REM from the current turtle position. 
7920 REM TODO: Add type-specific suffixes where necessary! 
7930 SUB fullSt(h, colorNo)
7940   REM TODO: add the respective type suffixes to your variable names if required 
7950   REM Octagon edge length 
7960   LET b = h * 0.5 / (sqrt(2.0) + 1)
7970   REM Cathetus of the outer corner triangle of the octagon 
7980   LET c = b / sqrt(2.0)
7990   penUp()
8000   right(90)
8010   forward((c+b)/2.0 + c) : REM color = ffffff
8020   penDown()
8030   REM Counterclockwise draw all 4 edges of a squarfe with edge length c 
8040   REM in the colour endcoded by colorNo 
8050   CALL polygonPart(c, 4, true, 4, colorNo)
8060   penUp()
8070   forward((c + b)/2.0) : REM color = ffffff
8080   left(90)
8090   penDown()
8100 END SUB
8110 REM  
8120 REM Draws letter Ã in colour specified by colorNo with font height h 
8130 REM from the current turtle position. 
8140 REM TODO: Add type-specific suffixes where necessary! 
8150 SUB letterAe(h, colorNo)
8160   REM TODO: add the respective type suffixes to your variable names if required 
8170   penUp()
8180   forward(h) : REM color = ffffff
8190   penDown()
8200   REM Clockwise draw all 4 edges of a square with edge length h/16 
8210   REM in the colour endcoded by colorNo 
8220   CALL polygonPart(max(h/16.0,1), 4, false, 4, colorNo)
8230   right(90)
8240   penUp()
8250   forward(h/2.0) : REM color = ffffff
8260   penDown()
8270   REM Clockwise draw all 4 edges of a square with edge length h/16 
8280   REM in the colour endcoded by colorNo 
8290   CALL polygonPart(max(h/16.0,1), 4, false, 4, colorNo)
8300   right(90)
8310   penUp()
8320   forward(h) : REM color = ffffff
8330   right(90)
8340   forward(h/2.0) : REM color = ffffff
8350   penDown()
8360   right(90)
8370   CALL letterA(h, colorNo)
8380 END SUB
8390 REM  
8400 REM Draws letter B in colour specified by colorNo with font height h 
8410 REM from the current turtle position. 
8420 REM TODO: Add type-specific suffixes where necessary! 
8430 SUB letterB(h, colorNo)
8440   REM TODO: add the respective type suffixes to your variable names if required 
8450   REM Octagon edge length 
8460   LET b = h * 0.5 / (sqrt(2.0) + 1)
8470   REM Cathetus of the outer corner triangle of the octagon 
8480   LET c = b / sqrt(2.0)
8490   CALL forward(h, colorNo)
8500   right(90)
8510   CALL forward(c+b, colorNo)
8520   REM Clockwise draw 4 edges of an octagon with edge length b 
8530   CALL polygonPart(b, 8, false, 4, colorNo)
8540   CALL forward(c, colorNo)
8550   penUp()
8560   left(180)
8570   forward(b + c) : REM color = ffffff
8580   penDown()
8590   REM Clockwise draw 4 edges of an octagon with edge length b 
8600   CALL polygonPart(b, 8, false, 4, colorNo)
8610   CALL forward(c, colorNo)
8620   penUp()
8630   left(180)
8640   forward(b + 2*c) : REM color = ffffff
8650   penDown()
8660   left(90)
8670 END SUB
8680 REM  
8690 REM Draws letter C in the colour encoded by colorNo with font height h 
8700 REM from the current turtle position. 
8710 REM TODO: Add type-specific suffixes where necessary! 
8720 SUB letterC(h, colorNo)
8730   REM TODO: add the respective type suffixes to your variable names if required 
8740   REM Octagon edge length 
8750   LET b = h * 0.5 / (sqrt(2.0) + 1)
8760   REM Cathetus of the outer triangle at the octagon corner 
8770   LET c = b / sqrt(2.0)
8780   REM 360Â°/8 
8790   LET rotAngle = 45
8800   penUp()
8810   forward(c) : REM color = ffffff
8820   penDown()
8830   right(180)
8840   REM Clockwise draws 3 edges of an octagon with edge length b in the colour 
8850   REM encoded by colorNo 
8860   CALL polygonPart(b, 8, true, 3, colorNo)
8870   left(rotAngle)
8880   penUp()
8890   forward(2*b + 2*c) : REM color = ffffff
8900   penDown()
8910   REM Counterclockwise draws 4 edges of an octagon with edge length b 
8920   REM iin the colour encoded by colorNo 
8930   CALL polygonPart(b, 8, true, 4, colorNo)
8940   CALL forward(b + 2*c, colorNo)
8950   penUp()
8960   forward(c) : REM color = ffffff
8970   left(90)
8980   CALL forward(b + 2*c, colorNo)
8990   penDown()
9000   left(90)
9010 END SUB
9020 REM  
9030 REM Draws letter D in colour specified by colorNo with font height h 
9040 REM from the current turtle position. 
9050 REM TODO: Add type-specific suffixes where necessary! 
9060 SUB letterD(h, colorNo)
9070   REM TODO: add the respective type suffixes to your variable names if required 
9080   REM Octagon edge length 
9090   LET b = h * 0.5 / (sqrt(2.0) + 1)
9100   REM Cathetus of the outer corner triangle of the octagon 
9110   LET c = b / sqrt(2.0)
9120   CALL forward(h, colorNo)
9130   right(90)
9140   CALL forward(c+b, colorNo)
9150   REM Clockwise draw 2 edges of an octagon with edge length b in the colour 
9160   REM encoded by colorNo 
9170   CALL polygonPart(b, 8, false, 2, colorNo)
9180   CALL forward(b + 2*c, colorNo)
9190   REM Clockwise draw 2 edges of an octagon with edge length b in the colour 
9200   REM encoded by colorNo 
9210   CALL polygonPart(b, 8, false, 2, colorNo)
9220   CALL forward(c, colorNo)
9230   penUp()
9240   left(180)
9250   forward(b + 2*c) : REM color = ffffff
9260   penDown()
9270   left(90)
9280 END SUB
9290 REM  
9300 REM Draws letter G in colour specified by colorNo with font height h 
9310 REM from the current turtle position. 
9320 REM TODO: Add type-specific suffixes where necessary! 
9330 SUB letterG(h, colorNo)
9340   REM TODO: add the respective type suffixes to your variable names if required 
9350   REM Octagon edge length 
9360   LET b = h * 0.5 / (sqrt(2.0) + 1)
9370   REM Cathetus of the corner triangle outside the octagon. 
9380   LET c = b / sqrt(2.0)
9390   penUp()
9400   forward(c) : REM color = ffffff
9410   penDown()
9420   right(180)
9430   REM Counterclockwise draw 4 edges of an octagon with edge length b in 
9440   REM the colour encoded by colorNo 
9450   CALL polygonPart(b, 8, true, 4, colorNo)
9460   CALL forward(c, colorNo)
9470   left(90)
9480   CALL forward(b/2.0 + c, colorNo)
9490   penUp()
9500   backward(b/2.0 + c) : REM color = ffffff
9510   right(90)
9520   forward(b + c) : REM color = ffffff
9530   penDown()
9540   REM Counterclockwise draw 4 edges of an octagon with edge length b in 
9550   REM the colour encoded by colorNo 
9560   CALL polygonPart(b, 8, true, 4, colorNo)
9570   CALL forward(b + 2*c, colorNo)
9580   penUp()
9590   forward(c) : REM color = ffffff
9600   left(90)
9610   CALL forward(b + 2*c, colorNo)
9620   penDown()
9630   left(90)
9640 END SUB
9650 REM  
9660 REM Draws letter J in colour encoded by colorNo with font height h 
9670 REM from the current turtle position. 
9680 REM TODO: Add type-specific suffixes where necessary! 
9690 SUB letterJ(h, colorNo)
9700   REM TODO: add the respective type suffixes to your variable names if required 
9710   REM Octagon edge length 
9720   LET b = h * 0.5 / (sqrt(2.0) + 1)
9730   REM Cathetus of the outer corner triangle of the octagon 
9740   LET c = b / sqrt(2.0)
9750   REM 360Â°/8 
9760   LET rotAngle = 45
9770   penUp()
9780   forward(c) : REM color = ffffff
9790   penDown()
9800   right(180)
9810   REM Counterclockwise draw 3 edges of an octagon with edge length b in 
9820   REM the colour encoded by colorNo 
9830   CALL polygonPart(b, 8, true, 3, colorNo)
9840   left(rotAngle)
9850   CALL forward(h - c, colorNo)
9860   penUp()
9870   backward(h) : REM color = ffffff
9880   penDown()
9890 END SUB
9900 REM  
9910 REM Draws letter O in colour specified by colorNo with font height h 
9920 REM from the current turtle position. 
9930 REM TODO: Add type-specific suffixes where necessary! 
9940 SUB letterO(h, colorNo)
9950   REM TODO: add the respective type suffixes to your variable names if required 
9960   REM Octagon edge length 
9970   LET b = h * 0.5 / (sqrt(2.0) + 1)
9980   REM Cathetus of the corner triangle outside the octagon 
9990   LET c = b / sqrt(2.0)
10000   penUp()
10010   forward(c) : REM color = ffffff
10020   penDown()
10030   right(180)
10040   REM Counterclockwise draw 4 edges of an octagon with edge length b 
10050   REM in the colour endcoded by colorNo 
10060   CALL polygonPart(b, 8, true, 4, colorNo)
10070   CALL forward(b + 2*c, colorNo)
10080   REM Counterclockwise draw 4 edges of an octagon with edge length b 
10090   REM in the colour endcoded by colorNo 
10100   CALL polygonPart(b, 8, true, 4, colorNo)
10110   CALL forward(b + 2*c, colorNo)
10120   penUp()
10130   forward(c) : REM color = ffffff
10140   left(90)
10150   forward(b + 2*c) : REM color = ffffff
10160   penDown()
10170   left(90)
10180 END SUB
10190 REM  
10200 REM Draws letter P in colour specified by colorNo with font height h 
10210 REM from the current turtle position. 
10220 REM TODO: Add type-specific suffixes where necessary! 
10230 SUB letterP(h, colorNo)
10240   REM TODO: add the respective type suffixes to your variable names if required 
10250   REM Octagon edge length 
10260   LET b = h * 0.5 / (sqrt(2.0) + 1)
10270   REM Cathetus of the corner triangle outside the octagon 
10280   LET c = b / sqrt(2.0)
10290   CALL forward(h, colorNo)
10300   right(90)
10310   CALL forward(c+b, colorNo)
10320   REM Clockwise draw 4 edges of an octagon with edge length b 
10330   REM in the colour endcoded by colorNo 
10340   CALL polygonPart(b, 8, false, 4, colorNo)
10350   CALL forward(c, colorNo)
10360   penUp()
10370   backward(b + 2*c) : REM color = ffffff
10380   left(90)
10390   forward(b + 2*c) : REM color = ffffff
10400   penDown()
10410   left(180)
10420 END SUB
10430 REM  
10440 REM Draws letter Q in colour specified by colorNo with font height h 
10450 REM from the current turtle position. 
10460 REM TODO: Add type-specific suffixes where necessary! 
10470 SUB letterQ(h, colorNo)
10480   REM TODO: add the respective type suffixes to your variable names if required 
10490   REM Octagon edge length 
10500   LET b = h * 0.5 / (sqrt(2.0) + 1)
10510   REM Cathetus of the outer corner triangle of the octagon 
10520   LET c = b / sqrt(2.0)
10530   REM 360Â°/8 
10540   LET rotAngle = 45
10550   penUp()
10560   forward(c) : REM color = ffffff
10570   penDown()
10580   right(180)
10590   REM Counterclockwise draw 4 edges of an octagon with edge length b 
10600   REM in the colour endcoded by colorNo 
10610   CALL polygonPart(b, 8, true, 4, colorNo)
10620   CALL forward(b + 2*c, colorNo)
10630   REM Counterclockwise draw 4 edges of an octagon with edge length b 
10640   REM in the colour endcoded by colorNo 
10650   CALL polygonPart(b, 8, true, 4, colorNo)
10660   CALL forward(b + 2*c, colorNo)
10670   penUp()
10680   forward(c) : REM color = ffffff
10690   left(90)
10700   forward(b + 2*c) : REM color = ffffff
10710   right(rotAngle)
10720   backward(b) : REM color = ffffff
10730   penDown()
10740   CALL forward(b, colorNo)
10750   left(90 + rotAngle)
10760 END SUB
10770 REM  
10780 REM Zeichnet den Buchstaben R von der Turtleposition aus 
10790 REM mit ZeilenhÃ¶he h 
10800 REM TODO: Add type-specific suffixes where necessary! 
10810 SUB letterR(h, colorNo)
10820   REM TODO: add the respective type suffixes to your variable names if required 
10830   REM Octagon edge length 
10840   LET b = h * 0.5 / (sqrt(2.0) + 1)
10850   REM Cathetus of the outer corner triangle of the octagon 
10860   LET c = b / sqrt(2.0)
10870   REM 360Â°/8 
10880   LET rotAngle = 45
10890   CALL forward(h, colorNo)
10900   right(90)
10910   CALL forward(c+b, colorNo)
10920   REM Clockwise draw 4 edges of an octagon with edge length b 
10930   REM in the colour endcoded by colorNo 
10940   CALL polygonPart(b, 8, false, 4, colorNo)
10950   CALL forward(c, colorNo)
10960   left(90 + rotAngle)
10970   CALL forward(sqrt(2.0)*(b + 2*c), colorNo)
10980   left(90 + rotAngle)
10990 END SUB
11000 REM  
11010 REM Draws letter S in colour specified by colorNo with font height h 
11020 REM from the current turtle position. 
11030 REM TODO: Add type-specific suffixes where necessary! 
11040 SUB letterS(h, colorNo)
11050   REM TODO: add the respective type suffixes to your variable names if required 
11060   REM Octagon edge length 
11070   LET b = h * 0.5 / (sqrt(2.0) + 1)
11080   REM Side length of the (outer) corner triangle of the octagon 
11090   LET c = b / sqrt(2.0)
11100   REM 360Â°/8 
11110   LET rotAngle = 45
11120   penUp()
11130   forward(c) : REM color = ffffff
11140   penDown()
11150   right(180)
11160   REM Counterclockwise draw 6 edges of an octagon with edge length b 
11170   REM in the colour encoded by colorNo 
11180   CALL polygonPart(b, 8, true, 6, colorNo)
11190   REM Clockwise draw 5 edges of an octagon with edge length b 
11200   REM in the colour encoded by colorNo 
11210   CALL polygonPart(b, 8, false, 5, colorNo)
11220   right(rotAngle)
11230   penUp()
11240   forward(2*b + 3*c) : REM color = ffffff
11250   penDown()
11260   left(180)
11270 END SUB
11280 REM  
11290 REM Draws letter U in colour specified by colorNo with font height h 
11300 REM from the current turtle position. 
11310 REM TODO: Add type-specific suffixes where necessary! 
11320 SUB letterU(h, colorNo)
11330   REM TODO: add the respective type suffixes to your variable names if required 
11340   REM edge length of a regular octagon 
11350   LET b = h * 0.5 / (sqrt(2.0) + 1)
11360   REM Cathetus of the outer corner triangle of the octagon 
11370   LET c = b / sqrt(2.0)
11380   REM 360Â°/8 
11390   LET rotAngle = 45
11400   penUp()
11410   forward(c) : REM color = ffffff
11420   penDown()
11430   CALL forward(h - c, colorNo)
11440   penUp()
11450   backward(h-c) : REM color = ffffff
11460   penDown()
11470   right(180)
11480   REM Counterclockwise draw 3 edges of an octagoin with edge length b in colour specified by colorNo 
11490   CALL polygonPart(b, 8, true, 3, colorNo)
11500   left(rotAngle)
11510   CALL forward(h - c, colorNo)
11520   penUp()
11530   backward(h) : REM color = ffffff
11540   penDown()
11550 END SUB
11560 REM  
11570 REM Draws a question mark in colour specified by colorNo with font height h 
11580 REM from the current turtle position. 
11590 REM TODO: Add type-specific suffixes where necessary! 
11600 SUB qstnMk(h, colorNo)
11610   REM TODO: add the respective type suffixes to your variable names if required 
11620   REM Octagon edge length 
11630   LET b = h * 0.5 / (sqrt(2.0) + 1)
11640   REM Cathetus of the outer corner triangle of the octagon 
11650   LET c = b / sqrt(2.0)
11660   REM 360Â°/8 
11670   LET rotAngle = 45
11680   penUp()
11690   forward(h-c) : REM color = ffffff
11700   penDown()
11710   REM Counterclockwise draw 5 edges of an octagon with edge length b 
11720   REM in the colour endcoded by colorNo 
11730   CALL polygonPart(b, 8, false, 5, colorNo)
11740   CALL forward(c, colorNo)
11750   left(rotAngle)
11760   CALL forward(b/2.0, colorNo)
11770   penUp()
11780   forward(c) : REM color = ffffff
11790   left(90)
11800   forward(c/2.0) : REM color = ffffff
11810   penDown()
11820   REM Counterclockwise draw all 4 edges of a squarfe with edge length c 
11830   REM in the colour endcoded by colorNo 
11840   CALL polygonPart(c, 4, false, 4, colorNo)
11850   penUp()
11860   forward((c + b)/2.0) : REM color = ffffff
11870   left(90)
11880   backward(c) : REM color = ffffff
11890   penDown()
11900 END SUB
11910 REM  
11920 REM Draws digit 0 in the colour specified by colorNo with font height h 
11930 REM from the current turtle position. 
11940 REM TODO: Add type-specific suffixes where necessary! 
11950 SUB digit0(h, colorNo)
11960   REM TODO: add the respective type suffixes to your variable names if required 
11970   penUp()
11980   forward(h/4.0) : REM color = ffffff
11990   penDown()
12000   right(45)
12010   LET len = h/sqrt(2)
12020   CALL forward(len, colorNo)
12030   penUp()
12040   backward(len) : REM color = ffffff
12050   left(45)
12060   backward(h/4.0) : REM color = ffffff
12070   CALL letterO(h, colorNo)
12080 END SUB
12090 REM  
12100 REM Draws letter Ã in colour specified by colorNo with font height h 
12110 REM from the current turtle position. 
12120 REM TODO: Add type-specific suffixes where necessary! 
12130 SUB letterOe(h, colorNo)
12140   REM TODO: add the respective type suffixes to your variable names if required 
12150   penUp()
12160   forward(h) : REM color = ffffff
12170   penDown()
12180   right(90)
12190   REM Clockwise draw all 4 edges of a square with edge length h/8 
12200   REM in the colour endcoded by colorNo 
12210   CALL polygonPart(h/8, 4, false, 4, colorNo)
12220   penUp()
12230   forward(h/2) : REM color = ffffff
12240   penDown()
12250   right(90)
12260   REM Clockwise draw all 4 edges of a square with edge length h/8 
12270   REM in the colour endcoded by colorNo 
12280   CALL polygonPart(h/8, 4, false, 4, colorNo)
12290   penUp()
12300   forward(h) : REM color = ffffff
12310   penDown()
12320   right(90)
12330   penUp()
12340   forward(h/2) : REM color = ffffff
12350   penDown()
12360   right(90)
12370   CALL letterO(h, colorNo)
12380 END SUB
12390 REM  
12400 REM Draws letter Ã in colour specified by colorNo with font height h 
12410 REM from the current turtle position. 
12420 REM TODO: Add type-specific suffixes where necessary! 
12430 SUB letterUe(h, colorNo)
12440   REM TODO: add the respective type suffixes to your variable names if required 
12450   penUp()
12460   forward(h) : REM color = ffffff
12470   right(90)
12480   forward(max(h/8,1)) : REM color = ffffff
12490   penDown()
12500   REM Clockwise draw all 4 edges of a square with edge length h/16 
12510   REM in the colour endcoded by colorNo 
12520   CALL polygonPart(max(h/16,1), 4, false, 4, colorNo)
12530   penUp()
12540   forward(h/2 - 2 * max(h/8,1) - max(h/16, 1)) : REM color = ffffff
12550   penDown()
12560   REM Clockwise draw all 4 edges of a square with edge length h/16 
12570   REM in the colour endcoded by colorNo 
12580   CALL polygonPart(max(h/16,1), 4, false, 4, colorNo)
12590   penUp()
12600   forward(max(h/8,1)) : REM color = ffffff
12610   penDown()
12620   right(90)
12630   penUp()
12640   forward(h) : REM color = ffffff
12650   right(90)
12660   forward(h/2) : REM color = ffffff
12670   penDown()
12680   right(90)
12690   CALL letterU(h, colorNo)
12700 END SUB
12710 REM  
12720 REM Has the turtle draw the given string 'textÂ´ with font height 'hÂ´ (in 
12730 REM pixels) and the colour coded by integer 'cÂ´ from the current Turtle 
12740 REM position to the Turtle canvas. If the turtle looks North then 
12750 REM the text will be written rightwards. In the event, the turtle will be 
12760 REM placed behind the text in original orientation (such that the next text 
12770 REM would be written like a continuation. Colour codes: 
12780 REM 1 = black 
12790 REM 2 = red 
12800 REM 3 = yellow 
12810 REM 4 = green 
12820 REM 5 = cyan 
12830 REM 6 = blue 
12840 REM 7 = pink 
12850 REM 8 = grey 
12860 REM 9 = orange 
12870 REM 10 = violet 
12880 REM All letters (ASCII) will be converted to uppercase, 
12890 REM the set of representable special characters is: decimal digits, 
12900 REM '.', ',', '!', '?', 'Ã', 'Ã', 'Ã'. Other characters will be shown as a small 
12910 REM centred square (dummy character). 
12920 REM TODO: Add type-specific suffixes where necessary! 
12930 SUB drawText(text AS String, h AS integer, c AS integer)
12940   REM TODO: add the respective type suffixes to your variable names if required 
12950   LET gap = h/10.0
12960   FOR k = 1 TO length(text)
12970     LET letter = uppercase(copy(text, k, 1))
12980     SELECT CASE letter
12990       CASE "A"
13000         CALL letterA(h,c)
13010       CASE "B"
13020         CALL letterB(h,c)
13030       CASE "C"
13040         CALL letterC(h,c)
13050       CASE "D"
13060         CALL letterD(h,c)
13070       CASE "E"
13080         CALL letterE(h,c)
13090       CASE "F"
13100         CALL letterF(h,c)
13110       CASE "G"
13120         CALL letterG(h,c)
13130       CASE "H"
13140         CALL letterH(h,c)
13150       CASE "I"
13160         CALL letterI(h,c)
13170       CASE "J"
13180         CALL letterJ(h,c)
13190       CASE "K"
13200         CALL letterK(h,c)
13210       CASE "L"
13220         CALL letterL(h,c)
13230       CASE "M"
13240         CALL letterM(h,c)
13250       CASE "N"
13260         CALL letterN(h,c)
13270       CASE "O"
13280         CALL letterO(h,c)
13290       CASE "P"
13300         CALL letterP(h,c)
13310       CASE "Q"
13320         CALL letterQ(h,c)
13330       CASE "R"
13340         CALL letterR(h,c)
13350       CASE "S"
13360         CALL letterS(h,c)
13370       CASE "T"
13380         CALL letterT(h,c)
13390       CASE "U"
13400         CALL letterU(h,c)
13410       CASE "V"
13420         CALL letterV(h,c)
13430       CASE "W"
13440         CALL letterW(h,c)
13450       CASE "X"
13460         CALL letterX(h,c)
13470       CASE "Y"
13480         CALL letterY(h,c)
13490       CASE "Z"
13500         CALL letterZ(h,c)
13510       CASE " "
13520         CALL blank(h,c)
13530       CASE "!"
13540         CALL exclMk(h,c)
13550       CASE "?"
13560         CALL qstnMk(h,c)
13570       CASE "."
13580         CALL fullSt(h,c)
13590       CASE ","
13600         CALL comma(h,c)
13610       CASE "Ã"
13620         CALL letterAe(h,c)
13630       CASE "Ã"
13640         CALL letterOe(h,c)
13650       CASE "Ã"
13660         CALL letterUe(h,c)
13670       CASE "0"
13680         CALL digit0(h,c)
13690       CASE "1"
13700         CALL digit1(h,c)
13710       CASE "2"
13720         CALL digit2(h,c)
13730       CASE "3"
13740         CALL digit3(h,c)
13750       CASE "4"
13760         CALL digit4(h,c)
13770       CASE "5"
13780         CALL digit5(h,c)
13790       CASE "6"
13800         CALL digit6(h,c)
13810       CASE "7"
13820         CALL digit7(h,c)
13830       CASE "8"
13840         CALL digit8(h,c)
13850       CASE "9"
13860         CALL digit9(h,c)
13870       CASE ELSE
13880         CALL charDummy(h,c)
13890     END SELECT
13900     right(90)
13910     penUp()
13920     forward(gap) : REM color = ffffff
13930     penDown()
13940     left(90)
13950   NEXT k
13960 END SUB

REM = = = = 8< = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

