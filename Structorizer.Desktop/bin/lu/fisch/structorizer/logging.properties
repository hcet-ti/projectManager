############################################################
#  	Structorizer Logging Configuration File
#
# This file is supposed to be located next to the JAR file
# of Structorizer i.e. in the Structorizer.app/Contents/Java
# subfolder of the Structorizer installation directory.
# In an IDE test environment, a copy should be placed in
# the Structorizer project directory.
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma-separated list of log Handler 
# classes. These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# The ConsoleHandler is by default configured to show only
# messages at the SEVERE and above levels (see handler-
# specific properties below).
# The FileHandler logs messages in a text file specified by
# the pattern property and at the level specified as level
# property (and above) in the handler-specific properties.
handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility-specific level
# Note that both ConsoleHandler and FileHandler also have
# separate level settings to limit messages printed to the
# console or log file, respectively.
# Available levels are:
# OFF/SEVERE/WARNING/INFO/CONFIG/FINE/FINER/FINEST/ALL
# The INFO level is the standard level of general interest,
# CONFIG is for application-specifc debugging purposes,
# FINE etc. allow deeper tracing into the Java libraries.
.level= INFO

############################################################
# Handler-specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in .structorizer subfolder of the
# user's home directory.
java.util.logging.FileHandler.pattern = %h/.structorizer/structorizer%u.%g.log
java.util.logging.FileHandler.limit = 100000
java.util.logging.FileHandler.count = 5
java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
#java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.FileHandler.level = CONFIG

# Limit the message that are printed on the console to SEVERE and above.
java.util.logging.ConsoleHandler.level = SEVERE
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Example to customize the SimpleFormatter output format 
# to print one-line log message like this:
#     <level>: <log message> [<date/time>]
#
# java.util.logging.SimpleFormatter.format=%4$s: %5$s [%1$tc]%n

############################################################
# Facility-specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the com.xyz.foo logger to only log SEVERE
# messages:
#com.xyz.foo.level = SEVERE
lu.fisch.structorizer.parsers.level = CONFIG
#lu.fisch.structorizer.generators.level = CONFIG
