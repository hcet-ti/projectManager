<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="https://structorizer.fisch.lu" version="3.28-12" preRepeat="until " postFor="to" preReturn="return" postForIn="in" preWhile="while" output="OUTPUT" input="INPUT" preFor="for" preExit="exit" preLeave="leave" ignoreCase="true" preForIn="foreach" stepFor="step " author="Kay Gürtzig" created="2018-12-14" changedby="Kay Gürtzig" changed="2018-12-17" origin="D:\workspace\kay\Structorizer\bin\lu\fisch\structorizer\parsers\INSPECT_TALLYING-6.nsd / COBOLParser: &#34;D:\SW-Produkte\Structorizer\tests\Issue631_COBOL_preprocessor\DemoINSPECT4.cob&#34;" licenseName="GPLv3-link" license="GNU General Public License (V 3)&#10;https://www.gnu.org/licenses/gpl.html&#10;http://www.gnu.de/documents/gpl.de.html&#10;" text="&#34;INSPECT_TALLYING(target, counters, modes, items, after, before)&#34;" comment="&#34;This routine simulates an INSPECT TALLYING command of COBOL.&#34;,&#34;Argument target represents the string to be inspected.&#34;,&#34;The argument arrays counters, modes, items, after, before must each contain one element per tallying clause:&#34;,&#34;For the k-th tallying clause the elements are to represent:&#34;,&#34;counters[k] - the (initial) count value (will be incremented by the routine);&#34;,&#34;modes[k] - one of &#34;&#34;CHARACTERS&#34;&#34;, &#34;&#34;ALL&#34;&#34;, &#34;&#34;LEADING&#34;&#34;, &#34;&#34;TRAILING&#34;&#34;;&#34;,&#34;items[k] - the substring to count (ignored with modes[k] = &#34;&#34;CHARACTERS&#34;&#34;);&#34;,&#34;after[k] - the trigger substring starting the region (or &#34;&#34;&#34;&#34; if none);&#34;,&#34;before[k] - the trigger substrng terminating the region (or &#34;&#34;&#34;&#34; if none).&#34;,&#34;Thus, an argument tuple represents a tallying clause like:&#34;,&#34;counters[k] FOR modes[k] items[k] AFTER INITIAL after[k] BEFORE INITIAL before[k]&#34;" color="ffffff" type="sub" style="nice">
	<children>
		<instruction text="&#34;n &#60;- length(items)&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;len &#60;- length(target)&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;i &#60;- len + 1&#34;,&#34;maxEnd &#60;- 1&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<for text="&#34;for k &#60;- 0 to n-1&#34;" comment="&#34;Preparation of regions&#34;" counterVar="k" startValue="0" endValue="n-1" stepConst="1" style="COUNTER" color="ffffff" disabled="0">
			<qFor>
				<instruction text="&#34;item &#60;- items[k]&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
				<instruction text="&#34;lenItem &#60;- length(item)&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
				<instruction text="&#34;start[k] &#60;- pos(after[k], target)&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
				<alternative text="&#34;start[k] &#60; 1&#34;" comment="" color="ffffff" disabled="0">
					<qTrue>
						<instruction text="&#34;start[k] &#60;- len + 1&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
					</qTrue>
					<qFalse>
						<instruction text="&#34;inc(start[k], length(after[k]))&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
					</qFalse>
				</alternative>
				<instruction text="&#34;end[k] &#60;- pos(before[k], target)&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
				<alternative text="&#34;(before[k] = &#34;&#34;&#34;&#34;) or (end[k] &#60; 1)&#34;" comment="" color="ffffff" disabled="0">
					<qTrue>
						<instruction text="&#34;end[k] &#60;- len + 1&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
					</qTrue>
					<qFalse color="ffffff">
					</qFalse>
				</alternative>
				<case text="&#34;modes[k]&#34;,&#34;&#34;&#34;LEADING&#34;&#34;&#34;,&#34;&#34;&#34;TRAILING&#34;&#34;&#34;,&#34;%&#34;" comment="" color="ffffff" disabled="0">
					<qCase>
						<instruction text="&#34;j &#60;- start[k]&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
						<while text="&#34;(j &#60;= end[k] - lenItem) and (copy(target, j, lenItem) = item)&#34;" comment="" color="ffffff" disabled="0">
							<qWhile>
								<instruction text="&#34;inc(j, lenItem)&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
							</qWhile>
						</while>
						<instruction text="&#34;end[k] &#60;- j&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
					</qCase>
					<qCase>
						<instruction text="&#34;j = end[k] - lenItem&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
						<while text="&#34;(j &#62;= start[k]) and (copy(target, j, lenItem) = item)&#34;" comment="" color="ffffff" disabled="0">
							<qWhile>
								<instruction text="&#34;dec(j, lenItem)&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
							</qWhile>
						</while>
						<instruction text="&#34;start[k] &#60;- j + lenItem&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
					</qCase>
					<qCase color="ffffff">
					</qCase>
				</case>
				<alternative text="&#34;start[k] &#60; i&#34;" comment="" color="ffffff" disabled="0">
					<qTrue>
						<instruction text="&#34;i &#60;- start[k]&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
					</qTrue>
					<qFalse color="ffffff">
					</qFalse>
				</alternative>
				<alternative text="&#34;end[k] &#62; maxEnd&#34;" comment="" color="ffffff" disabled="0">
					<qTrue>
						<instruction text="&#34;maxEnd &#60;- end[k]&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
					</qTrue>
					<qFalse color="ffffff">
					</qFalse>
				</alternative>
			</qFor>
		</for>
		<while text="&#34;i &#60; maxEnd&#34;" comment="&#34;Start actual tallying&#34;" color="ffffff" disabled="0">
			<qWhile>
				<instruction text="&#34;isFound &#60;- false&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
				<instruction text="&#34;k &#60;- 0&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
				<while text="&#34;!isFound &amp;&amp; (k &#60; n)&#34;" comment="" color="ffffff" disabled="0">
					<qWhile>
						<alternative text="&#34;i &#62;= start[k] &amp;&amp; i &#60; end[k]&#34;" comment="" color="ffffff" disabled="0">
							<qTrue>
								<instruction text="&#34;item &#60;- items[k]&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
								<alternative text="&#34;modes[k] = &#34;&#34;CHARACTERS&#34;&#34;&#34;" comment="" color="ffffff" disabled="0">
									<qTrue>
										<instruction text="&#34;lenItem &#60;- 1&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
									</qTrue>
									<qFalse>
										<instruction text="&#34;lenItem &#60;- length(item)&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
									</qFalse>
								</alternative>
								<instruction text="&#34;substring &#60;- copy(target, i, lenItem)&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
								<alternative text="&#34;modes[k] = &#34;&#34;CHARACTERS&#34;&#34; or (item = substring)&#34;" comment="" color="ffffff" disabled="0">
									<qTrue>
										<case text="&#34;modes[k]&#34;,&#34;&#34;&#34;ALL&#34;&#34;&#34;,&#34;&#34;&#34;LEADING&#34;&#34;&#34;,&#34;&#34;&#34;TRAILING&#34;&#34;&#34;,&#34;&#34;&#34;CHARACTERS&#34;&#34;&#34;,&#34;%&#34;" comment="" color="ffffff" disabled="0">
											<qCase>
												<instruction text="&#34;isFound &#60;- i + lenItem &#60;= end[k]&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
											</qCase>
											<qCase>
												<instruction text="&#34;isFound &#60;- (i - start[k]) mod lenItem = 0&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
											</qCase>
											<qCase>
												<instruction text="&#34;isFound &#60;- (end[k] - i) mod lenItem = 0&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
											</qCase>
											<qCase>
												<instruction text="&#34;isFound &#60;- (i + lenItem &#60;= end[k])&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
											</qCase>
											<qCase color="ffffff">
											</qCase>
										</case>
										<alternative text="&#34;isFound&#34;" comment="" color="ffffff" disabled="0">
											<qTrue>
												<instruction text="&#34;inc(counters[k], 1)&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
												<instruction text="&#34;inc(i, lenItem - 1)&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
											</qTrue>
											<qFalse color="ffffff">
											</qFalse>
										</alternative>
									</qTrue>
									<qFalse color="ffffff">
									</qFalse>
								</alternative>
							</qTrue>
							<qFalse color="ffffff">
							</qFalse>
						</alternative>
						<instruction text="&#34;k &#60;- k + 1&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
					</qWhile>
				</while>
				<instruction text="&#34;i &#60;- i + 1&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
			</qWhile>
		</while>
	</children>
</root>